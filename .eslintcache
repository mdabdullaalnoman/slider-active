[{"D:\\Programming Hero\\Main Cource\\Practice Projects\\slide-active\\src\\index.js":"1","D:\\Programming Hero\\Main Cource\\Practice Projects\\slide-active\\src\\App.js":"2","D:\\Programming Hero\\Main Cource\\Practice Projects\\slide-active\\src\\reportWebVitals.js":"3","D:\\Programming Hero\\Main Cource\\Practice Projects\\slide-active\\src\\Components\\Home\\Home.js":"4","D:\\Programming Hero\\Main Cource\\Practice Projects\\slide-active\\src\\Components\\Header\\Header.js":"5","D:\\Programming Hero\\Main Cource\\Practice Projects\\slide-active\\src\\Components\\DataLoad\\DataLoad.js":"6","D:\\Programming Hero\\Main Cource\\Practice Projects\\slide-active\\src\\Components\\SliderRight\\SliderRight.js":"7","D:\\Programming Hero\\Main Cource\\Practice Projects\\slide-active\\src\\FakeData\\SliderInfo.js":"8","D:\\Programming Hero\\Main Cource\\Practice Projects\\slide-active\\src\\Components\\SliderLeft\\SliderLeft.js":"9","D:\\Programming Hero\\Main Cource\\Practice Projects\\slide-active\\src\\Components\\Booking\\Booking.js":"10"},{"size":478,"mtime":1609261560208,"results":"11","hashOfConfig":"12"},{"size":526,"mtime":1609862128083,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":345,"mtime":1609836361680,"results":"15","hashOfConfig":"12"},{"size":719,"mtime":1609334098130,"results":"16","hashOfConfig":"12"},{"size":3237,"mtime":1609836723115,"results":"17","hashOfConfig":"12"},{"size":490,"mtime":1609340292685,"results":"18","hashOfConfig":"12"},{"size":1167,"mtime":1609262685526,"results":"19","hashOfConfig":"12"},{"size":446,"mtime":1609434918981,"results":"20","hashOfConfig":"12"},{"size":1031,"mtime":1609837164946,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"4uku7s",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},"D:\\Programming Hero\\Main Cource\\Practice Projects\\slide-active\\src\\index.js",[],["46","47"],"D:\\Programming Hero\\Main Cource\\Practice Projects\\slide-active\\src\\App.js",[],"D:\\Programming Hero\\Main Cource\\Practice Projects\\slide-active\\src\\reportWebVitals.js",[],"D:\\Programming Hero\\Main Cource\\Practice Projects\\slide-active\\src\\Components\\Home\\Home.js",[],"D:\\Programming Hero\\Main Cource\\Practice Projects\\slide-active\\src\\Components\\Header\\Header.js",[],"D:\\Programming Hero\\Main Cource\\Practice Projects\\slide-active\\src\\Components\\DataLoad\\DataLoad.js",["48","49"],"import React, { useState } from 'react';\r\nimport SliderInfo from '../../FakeData/SliderInfo';\r\nimport SliderLeft from '../SliderLeft/SliderLeft';\r\nimport SliderRight from '../SliderRight/SliderRight';\r\n// import Swiper core and required components\r\nimport SwiperCore, { Navigation, Pagination, Scrollbar, A11y, Autoplay } from 'swiper';\r\n\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\n\r\n// Import Swiper styles\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';\r\nimport 'swiper/components/pagination/pagination.scss';\r\nimport 'swiper/components/scrollbar/scrollbar.scss';\r\n\r\n// install Swiper components\r\nSwiperCore.use([Navigation, Pagination, Scrollbar, A11y, Autoplay]);\r\n\r\nconst DataLoad = () => {\r\n    const [showData, setShowData ] = useState([]);\r\n    const handelShowData = (data) => {\r\n        setShowData([data]);\r\n    }\r\n\r\n        \r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <div className=\"row my-5 justify-content-center align-items-center\">\r\n                    <div className=\"col-12 col-md-4\">\r\n                        {\r\n                            showData.map( LeftInfo => <SliderLeft LeftInfo={LeftInfo}></SliderLeft>)\r\n                        }\r\n                    </div>\r\n                    <div className=\"col-12 col-md-8\">\r\n                        <div className=\"row\">\r\n                        <Swiper\r\n                            spaceBetween={10}\r\n                            slidesPerView={3}\r\n                            // navigation\r\n                            loop={true}\r\n                            autoplay={{\r\n                                delay:2000,\r\n                                disableOnInteraction:false\r\n                            }}\r\n                            pagination={{ clickable: true }}\r\n                            // scrollbar={{ draggable: true }}\r\n                            onSwiper={(swiper) => console.log(swiper)}\r\n                            onSlideChange={() => console.log('slide change')}\r\n                            >\r\n                            {\r\n                                    SliderInfo.map( data => ( \r\n                                        <SwiperSlide>                                        \r\n                                            <div className=\"col-md-3\">\r\n                                               <div className=\" mx-auto\">\r\n                                                    <img onClick={() =>handelShowData(data)}  src={data.image} className=\"image-fluid\" style={{height:'300px' }} alt=\"image\"/>\r\n                                                    <h5 style={{color:'white'}}>{data.tittle}</h5>\r\n                                                </div>\r\n                                            </div>                                     \r\n                                        </SwiperSlide>\r\n                                    ))\r\n                                }\r\n                            ...\r\n                         </Swiper>\r\n                                \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DataLoad;","D:\\Programming Hero\\Main Cource\\Practice Projects\\slide-active\\src\\Components\\SliderRight\\SliderRight.js",[],["50","51"],"D:\\Programming Hero\\Main Cource\\Practice Projects\\slide-active\\src\\FakeData\\SliderInfo.js",[],"D:\\Programming Hero\\Main Cource\\Practice Projects\\slide-active\\src\\Components\\SliderLeft\\SliderLeft.js",[],"D:\\Programming Hero\\Main Cource\\Practice Projects\\slide-active\\src\\Components\\Booking\\Booking.js",["52","53","54","55"],"import { info } from 'node-sass';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { useParams } from 'react-router-dom';\r\nimport SliderInfo from '../../FakeData/SliderInfo';\r\n\r\nconst Booking = () => {\r\n    const BookingInfo = SliderInfo;\r\n    const {bookingId} = useParams();\r\n    const [infoD , setInfoD] = useState([]);\r\n  \r\n    useEffect(() => {\r\n        const info = BookingInfo.find(infoD => infoD.id === parseInt(bookingId))\r\n        setInfoD(info);\r\n    },[]);\r\n    return (\r\n        <div className=\"bg-gradient\">\r\n           <div className=\"container\">\r\n               <div className=\"row\">\r\n                   <div className=\"col-12 col-md-6 mx-auto\">\r\n                      {/* <h3>{infoD.name}</h3>\r\n                      <p>{info.description}</p> */}\r\n                   </div>\r\n                   <div className=\"col-12 col-md-6 mx-auto\">\r\n\r\n                   </div>\r\n               </div>\r\n           </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Booking;",{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":4,"column":8,"nodeType":"62","messageId":"63","endLine":4,"endColumn":19},{"ruleId":"64","severity":1,"message":"65","line":57,"column":53,"nodeType":"66","endLine":57,"endColumn":175},{"ruleId":"56","replacedBy":"67"},{"ruleId":"58","replacedBy":"68"},{"ruleId":"60","severity":1,"message":"69","line":1,"column":10,"nodeType":"62","messageId":"63","endLine":1,"endColumn":14},{"ruleId":"60","severity":1,"message":"70","line":3,"column":10,"nodeType":"62","messageId":"63","endLine":3,"endColumn":14},{"ruleId":"60","severity":1,"message":"71","line":10,"column":12,"nodeType":"62","messageId":"63","endLine":10,"endColumn":17},{"ruleId":"72","severity":1,"message":"73","line":15,"column":7,"nodeType":"74","endLine":15,"endColumn":9,"suggestions":"75"},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'SliderRight' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["76"],["77"],"'info' is defined but never used.","'Card' is defined but never used.","'infoD' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'BookingInfo' and 'bookingId'. Either include them or remove the dependency array.","ArrayExpression",["78"],"no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},"Update the dependencies array to be: [BookingInfo, bookingId]",{"range":"81","text":"82"},[517,519],"[BookingInfo, bookingId]"]